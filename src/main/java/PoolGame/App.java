/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package PoolGame;

import java.io.IOException;
import java.util.List;
import java.util.Optional;

import PoolGame.Items.Pocket;
import PoolGame.Items.PoolTable;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ChoiceDialog;
import javafx.stage.StageStyle;
import org.json.simple.parser.ParseException;

import PoolGame.ConfigReader.ConfigKeyMissingException;
import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.application.Application;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.canvas.Canvas;
import javafx.stage.Stage;
import javafx.util.Duration;

/** The JavaFX application */
public class App extends Application {

    private final double FRAMETIME = 1.0 / 60.0;

    private ConfigReader loadConfig(List<String> args) {
        String configPath;
        boolean isResourcesDir = true;
		if (args.size() > 0) {
			configPath = args.get(0);
		} else {
            // configPath = "src/main/resources/config.json";
			// configPath = "/config.json";
            configPath = "/config_hard.json";
            //isResourcesDir = true;
		}System.out.println(configPath);
		// parse the file:
        ConfigReader config = null;
        try {
            config = new ConfigReader(configPath, isResourcesDir);
        } catch (IOException | ParseException | ConfigKeyMissingException | IllegalArgumentException e) {
            e.printStackTrace();
            System.err.printf("ERROR: %s\n", e.getMessage());
            System.exit(1);
        }
        return config;
    }

    @Override
    public void start(Stage stage) {
        Group root = new Group();
        Scene scene = new Scene(root);
        
        stage.setScene(scene);
        stage.setTitle("PoolGame");
        //stage.initStyle(StageStyle.UNDECORATED);
        stage.show();

        List<String> choices = List.of("easy", "hard", "normal");
        ChoiceDialog<String> dialog = new ChoiceDialog<>(choices.get(0), choices);
        dialog.setTitle("Choose an Option");
        dialog.setHeaderText("Please choose an option:");

        // 显示对话框并等待用户选择
        Optional<String> result = dialog.showAndWait();

        // 处理用户选择
        result.ifPresent(selectedOption -> {
            System.out.println("User chose: " + selectedOption);
            //"/config_hard.json"
            ConfigReader config = loadConfig(List.of("/config_" + selectedOption + ".json"));
            Game game = new Game(config);

            Canvas canvas = new Canvas(game.getWindowDimX(), game.getWindowDimY());

            stage.setWidth(game.getWindowDimX() + PoolTable.LabelX + 2 * PoolTable.LabelOffset);
            stage.setHeight(game.getWindowDimY() +
                    Pocket.RADIUS +
                    PoolTable.POCKET_OFFSET +
                    4); // Magic number to get bottom to align
            Button button = new Button("Click");
            button.setLayoutX(0);  // X轴位置
            button.setLayoutY(400);  // Y轴位置
            // 设置按钮大小
            button.setPrefWidth(100);
            button.setPrefHeight(30);
            button.setOnAction(e -> System.out.println("Button clicked!"));


            root.getChildren().add(canvas);

            // GraphicsContext gc = canvas.getGraphicsContext2D();
            game.addDrawables(root);root.getChildren().add(button);

            Timeline timeline = new Timeline();
            timeline.setCycleCount(Timeline.INDEFINITE);
            KeyFrame frame = new KeyFrame(Duration.seconds(FRAMETIME), (actionEvent) -> game.tick());

            timeline.getKeyFrames().add(frame);
            timeline.play();
        });
    }

    /**
     * The entry point of the program
     * @param args CLI arguments
     */
    public static void main(String[] args) {
        launch(args);
    }
}
